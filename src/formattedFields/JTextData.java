/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package formattedFields;


import java.awt.BorderLayout;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;


/**
 *
 * @author Rogério Eduardo Pereira
 * Data Criação: Mar 12, 2014
 */
public class JTextData extends JFormattedTextField
{
	/*
	 * Construtor
	 */
	public JTextData ()
	{
		initComponents();
	}
	
	/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Código Gerado ">//GEN-BEGIN:initComponents
    private void initComponents() {
        //JTextData = new javax.swing.JFormattedTextField();
		
		try
        {
            this.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex)
        {
            ex.printStackTrace();
        }

        this.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTextDataActionPerformed(evt);
            }
        });
        this.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                JTextDataFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                JTextDataFocusLost(evt);
            }
        });

        //javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        BorderLayout layout = new BorderLayout();
        this.setLayout(layout);
        /*layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(this, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(this)
        );*/
    }// </editor-fold>//GEN-END:initComponents

    private void JTextDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextMoedaActionPerformed
        this.transferFocus();
    }//GEN-LAST:event_jTextMoedaActionPerformed
	
	 private void JTextDataFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextMoedaFocusLost
        //Não tem espaços em branco
		if(!this.getText().contains(" "))
		{
			if(!this.validaData())
			{
				JOptionPane.showMessageDialog(null, "Data Inválida", "Data Inválida",JOptionPane.INFORMATION_MESSAGE);
				this.setText("");
				this.requestFocus();
			}
		}
		//Espaço em Branco
		else
		{
			if(!this.getText().equals("  /  /    "))
			{
				JOptionPane.showMessageDialog(null, "Data Inválida", "Data Inválida",JOptionPane.INFORMATION_MESSAGE);
				this.setText("");
				this.requestFocus();
			}
		}
    }//GEN-LAST:event_jTextMoedaFocusLost
	 
	 private void JTextDataFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextMoedaFocusGained
        if (this.getText().trim().compareTo("") != 0){
            this.selectAll();
        }
	}//GEN-LAST:event_jTextMoedaFocusGained
	 
	
	private Boolean validaData()
	{
		String[] data = this.getText().split("/");
		
		if(this.validaAno(Integer.parseInt(data[2])))
			if(this.validaMes(Integer.parseInt(data[1])))
				if(this.validaDia	(
										Integer.parseInt(data[0]), 
										Integer.parseInt(data[1]), 
										Integer.parseInt(data[2])
									))
					return true;
	
		return false;
	}
	
	private Boolean validaAno(int ano)
	{
		//Verifica ano
		if(ano < 0)
			return false;
		
		return true;
	}
	
	private Boolean validaMes(int mes)
	{
		//Verifica Mes
		if((mes < 1) || (mes > 12))
			return false;
		
		return true;
	}
	
	private Boolean validaDia(int dia, int mes, int ano)
	{
		//Verifica Dia
			//Fevereiro
			if (mes == 2)
			{
				Boolean bissesto;
				//Verifica ano bissext
				if((ano % 4) == 0)
				{
					if(String.valueOf(ano).endsWith("00"))
						if(!((ano % 400) == 0))
							bissesto = false;
					
					bissesto = true;
				}
				else
					bissesto = false;
				
				
				
				if(bissesto == true)
				{
					if((dia < 1) || (dia > 29))
						return false;
				}
				else
					if((dia < 1) || (dia > 28))
						return false;
			}
			//Meses de 31
			else if	(
						(mes	== 1)	||
						(mes	== 3)	||
						(mes	== 5)	||
						(mes	== 7)	||
						(mes	== 8)	||
						(mes	== 10)	||
						(mes	== 12) 
					)
			{
				if((dia < 1) || (dia > 31))
					return false;
			}
			//Meses de 30
			else
				if((dia < 1) || (dia > 30))
					return false;
			
		return true;
	}
	 
	/*public String getText()
	{
		return this.JTextData.getText();
	}
	
	public void setText(String data)
	{
		this.JTextData.setText(data);
	} 
	 
	public void setEnabled(Boolean habilita)
	{
		this.JTextData.setEnabled(habilita);
	}*/
	
	//public JFormattedTextField JTextData;
}
